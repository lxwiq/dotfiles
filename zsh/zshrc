# Configuration ZSH simplifiée sans Oh My Zsh
# Fichier: ~/.config/zsh/zshrc ou ~/.zshrc

# === Variables d'environnement ===
export LANG=fr_FR.UTF-8
export LC_ALL=fr_FR.UTF-8
export EDITOR="nano"
export VISUAL="nano"
export PAGER="less"
export TERM="xterm-256color"

# === Plugins ZSH ===
# Chargement des plugins si installés
[[ -f ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
[[ -f ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# === Historique ===
HISTFILE=~/.zsh_history
HISTSIZE=5000
SAVEHIST=5000
setopt HIST_IGNORE_ALL_DUPS  # Ne pas stocker les commandes dupliquées
setopt HIST_IGNORE_SPACE     # Ne pas enregistrer les commandes commençant par un espace

# === Complétion ===
autoload -Uz compinit
compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' # Case insensitive completion

# Options ZSH
setopt AUTO_CD              # Taper un dossier sans cd pour y accéder
setopt EXTENDED_GLOB        # Utiliser les expressions régulières étendues
setopt PROMPT_SUBST         # Permettre la substitution dans le prompt
setopt INTERACTIVE_COMMENTS # Permettre les commentaires dans le shell interactif
setopt NO_BEEP              # Désactiver le bip sonore

# Keybindings
bindkey -e                  # Utiliser les keybindings emacs (ctrl+a pour début de ligne, etc.)
bindkey '^[[A' up-line-or-search    # Flèche haut pour chercher dans l'historique
bindkey '^[[B' down-line-or-search  # Flèche bas pour chercher dans l'historique

# === Alias de base ===
# Navigation
alias ..="cd .."
alias ...="cd ../.."
alias ~="cd ~"

# Listing
alias ls="ls -G"
alias l="ls -lh"
alias la="ls -lah"

# Utilitaires
alias c="clear"
alias h="history"

# Git
alias g="git"
alias gs="git status"
alias ga="git add"
alias gc="git commit -m"
alias gp="git push"
alias gl="git pull"

# Raccourcis
alias zshrc="$EDITOR ~/.zshrc"
alias reload="source ~/.zshrc"

# === Fonctions ===
# Créer un dossier et s'y déplacer
mkcd() {
  mkdir -p "$1" && cd "$1"
}

# === Profile Switcher ===
# Configuration des profils
PROFILE_STATE_FILE="$HOME/.profile_current"

# Couleurs Mocli (bleu et jaune)
MOCLI_PROMPT='%F{33}%n%f%F{226}@%f%F{33}%m%f%F{226}[%f%F{33}%~%f%F{226}]%f%F{226}$%f '

# Couleurs Perso (par défaut)
PERSO_PROMPT='%F{207}%n%f%F{75}@%f%F{207}%m%f%F{75}[%f%F{214}%~%f%F{75}]%f%F{75}$%f '

# Fonction pour obtenir le profil actuel
get_profile() {
    if [[ -f "$PROFILE_STATE_FILE" ]]; then
        cat "$PROFILE_STATE_FILE"
    else
        echo "perso"
    fi
}

# Fonction sp pour changer de profil
function sp() {
    case "$1" in
        "perso")
            echo "perso" > "$PROFILE_STATE_FILE"
            # Sauvegarder AWS si elle existe
            if [[ -d "$HOME/.aws" ]]; then
                mv "$HOME/.aws" "$HOME/.aws_backup" 2>/dev/null || true
            fi
            export PROMPT="$PERSO_PROMPT"
            ;;
        "mocli")
            echo "mocli" > "$PROFILE_STATE_FILE"
            # Restaurer AWS si elle existe
            if [[ -d "$HOME/.aws_backup" ]]; then
                mv "$HOME/.aws_backup" "$HOME/.aws" 2>/dev/null || true
            fi
            export PROMPT="$MOCLI_PROMPT"
            ;;
        *)
            local current=$(get_profile)
            echo "Profil actuel: $current"
            echo "Usage: sp [perso|mocli]"
            ;;
    esac
}

# === Prompt personnalisé ===
# Initialiser le prompt selon le profil actuel
current_profile=$(get_profile)
if [[ "$current_profile" == "mocli" ]]; then
    export PROMPT="$MOCLI_PROMPT"
else
    export PROMPT="$PERSO_PROMPT"
fi

# Configuration du prompt de droite avec git si disponible
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '%F{green}(%b)%f'
zstyle ':vcs_info:*' enable git
export RPROMPT='${vcs_info_msg_0_}'

# === Chemins personnalisés ===
# Ajout de ~/.local/bin au PATH
if [ -d "$HOME/.local/bin" ]; then
  export PATH="$HOME/.local/bin:$PATH"
fi

# Ajout de ~/bin au PATH
if [ -d "$HOME/bin" ]; then
  export PATH="$HOME/bin:$PATH"
fi

# === Configurations spécifiques à l'OS ===
case "$(uname -s)" in
  Darwin*)
    # macOS
    # Homebrew
    if [ -d "/opt/homebrew/bin" ]; then
      export PATH="/opt/homebrew/bin:$PATH"
    elif [ -d "/usr/local/bin" ]; then
      export PATH="/usr/local/bin:$PATH"
    fi
    ;;
esac

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# Load Angular CLI autocompletion.
source <(ng completion script)

# fzf integration
# Load from dotfiles if available, otherwise from home directory
if [ -f "${ZDOTDIR:-$HOME}/.config/zsh/fzf.zsh" ]; then
  source "${ZDOTDIR:-$HOME}/.config/zsh/fzf.zsh"
elif [ -f "${ZDOTDIR:-$HOME}/.fzf.zsh" ]; then
  source "${ZDOTDIR:-$HOME}/.fzf.zsh"
fi
